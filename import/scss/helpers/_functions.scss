// @use 'sass:math';

@function to-rems($px) {
    $rems: math-div($px, 16px) * 1rem;
    @return $rems;
}

@function math-div( $first , $second ) {
  @return ($first / $second);
}

@function math-round( $number ) {
  $rounded_number : floor( $number + 0.5);
  @return $rounded_number;
}

@function math-pow($base, $exponent) {
  $result: 1;
  $abs_exponent: abs($exponent);
  
  @if $abs_exponent == 0 {
    @return 1;
  }
  
  @for $_ from 1 through $abs_exponent {
    $result: $result * $base;
  }
  
  @if $exponent < 0 {
    @return 1 / $result;
  }
  
  @return $result;
}

@function rnd($number, $places: 0) {
    $n: 1;
    @if $places > 0 {
      @for $i from 1 through $places {
        $n: $n * 10;
      }
    }
    @return math-div(math-round($number * $n), $n);
}


@function clamped($min-px, $max-px, $min-bp, $max-bp) {
    $slope: math-div($max-px - $min-px, $max-bp - $min-bp);
    $slope-vw: rnd($slope * 100, 2);
    $intercept-rems: rnd(to-rems($min-px - $slope * $min-bp), 2);
    $min-rems: rnd(to-rems($min-px), 2);
    $max-rems: rnd(to-rems($max-px), 2);
    @return clamp(#{$min-rems}, #{$slope-vw}vw #{"+"} #{$intercept-rems}, #{$max-rems});
}

@function Clamped($min-px, $max-px, $min-bp, $max-bp) {
  @return clamped($min-px , $max-px , $min-bp , $max-bp );
}

@function widthCalc( $fraction ) {
    @return 100% * $fraction;
}